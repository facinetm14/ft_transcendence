version: "3.8"
services:
#database container
  db:
    image: postgres:13.1
    container_name: db
    environment:
      - POSTGRES_PASSWORD=$DB_PASSWORD
    ports:
      - $DB_PORT:$DB_PORT
    volumes:
      - ./db/data:/var/lib/postgresql/data
    restart: always
    networks:
    - app-network

#backend container
  apis:
    depends_on:
      - db
    build:
      context: ./apis
      dockerfile: Dockerfile
    container_name: apis
    environment:
      - NODE_ENV=${API_NODE_ENV}
      - PGHOST=db
      - PGDATABASE=${DB_NAME}
      - PGPASSWORD=${DB_PASSWORD}
      - PGPORT=${DB_PORT}
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./apis:/usr/src/app
      - /app/node_modules
    networks:
    - app-network
  
#frontend container
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=$CLIENT_NODE_ENV
      - PORT=$CLIENT_PORT
      - API_BASE_URL=${API_BASE_URL} 
    ports:
      - $EX_CLIENT_PORT:$CLIENT_PORT
    volumes:
      - ./frontend:/usr/src/client
      - /client/node_modules
    networks:
    - app-network
    stdin_open: true

#database admin
  # adminer:
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8000:8000
  #   networks:
  #    - app-network
  #   depends_on:
  #    - db
networks:
  app-network:
